# server {
#   listen 80;
#   listen [::]:80;
#   server_tokens off;

#   root /var/www/html;
#   index index.html index.htm;
    #自动跳转
#   autoindex on;

#   # 修改为自己的域名
#   server_name api.lovelp.xin;

#   location /static/ {
#     alias /var/www/app/static/;
#     autoindex off;
#   }

#   # 访问 / 路径时执行反向代理
#   location / {
#     # 这里 nodejs 是 node 容器名
#     proxy_pass http://nodejs:7001;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header Host $host;
#     # 后端的Web服务器可以通过 X-Forwarded-For 获取用户真实 IP
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     # 允许客户端请求的最大单文件字节数
#     client_max_body_size 15M;
#     # 缓冲区代理缓冲用户端请求的最大字节数
#     client_body_buffer_size 128k;
#   }
# }

# 1. Nginx 路径的分类
# - 普通前端匹配的路径，例如 location / {}
# - 抢占式前缀匹配的路径，例如 location ^~ / {}
# - 精确匹配的路径，例如 location = / {}
# - 命名路径，比如 location @a {}
# - 无名路径，比如 if {}或者 limit_except {}生成的路径

# 2. Nginx location 的大致匹配顺序

# - 精确匹配的路径和两类前缀匹配的路径(字母序，如果某个精确匹配的路径的名字和前缀匹配的路径相同，精确匹配的路径排在前面)
# - 正则路径(出现序)
# - 命名路径(字母序)
# - 无名路径(出现序)

server {
        listen 80;
        listen 443 ssl;
        server_name www.hottopic.video;

        return 301 $scheme://$host$request_uri;

ssl_certificate /etc/letsencrypt/live/www.hottopic.video/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/www.hottopic.video/privkey.pem; # managed by Certbot
}

server {
        listen 80;
        listen [::]:80;

        root /var/www/hottopic;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name hottopic.video;

        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt { log_not_found off; access_log off; allow all; }
        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
                expires max;
                log_not_found off;
        }
        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }

        location ~ /\.ht {
                deny all;
        }

        # deny executing php files in upload folder
        location ~* /(?:uploads|files)/.*.php$ {
                deny all;
        }

        location ~* .(pl|cgi|py|sh|lua)$ {
               return 444;
        }

        location ~ .(gif|png|jpe?g)$ {
                valid_referers none blocked hottopic.video *.hottopic.video;
                if ($invalid_referer) {
                        return 403;
                }
        }

        error_log /var/log/nginx/error_hottopic.log info;
        access_log /var/log/nginx/access_hottopic.log;

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/www.hottopic.video/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/www.hottopic.video/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


        # Redirect non-https traffic to https
        if ($scheme != "https") {
                return 301 https://$host$request_uri;
        } # managed by Certbot

}
